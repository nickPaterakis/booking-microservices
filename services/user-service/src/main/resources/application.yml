server:
  port: 8084

user-service:
  auth-server:
    host: localhost
    port: 8080
  database:
    mongo:
      host: localhost
      port: 27017
  bucket-name: booking-bucket-1

spring:
  application:
    name: user-service
  data:
    mongodb:
      host: ${user-service.database.mongo.host}
      port: ${user-service.database.mongo.port}
      database: users
  cloud:
    gcp:
      credentials:
        location: classpath:gcp-account-file.json
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://${user-service.auth-server.host}:${user-service.auth-server.port}/realms/booking/protocol/openid-connect/certs
          issuer-uri: http://localhost:8080/realms/booking

---
spring:
  config:
    activate:
      on-profile: docker

user-service:
  auth-server:
    host: keycloak
  database:
    mongo:
      host: mongo

---
spring:
  config:
    activate:
      on-profile: kubernetes

user-service:
  auth-server:
    host: keycloak
  database:
    mongo:
      host: mongo

