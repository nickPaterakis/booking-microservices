server:
  port: 8084

app:
  auth-server:
    host: localhost
    port: 8080
  database:
    mongo:
      host: localhost
      port: 27017
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

spring:
  application:
    name: user-service
  data:
    mongodb:
      host: ${app.database.mongo.host}
      port: ${app.database.mongo.port}
      database: users
  rabbitmq:
    host: ${app.rabbitmq.host}
    port: ${app.rabbitmq.port}
    username: ${app.rabbitmq.username}
    password: ${app.rabbitmq.password}
  cloud:
    gcp:
      credentials:
        location: classpath:gcp-account-file.json
    config:
      enabled: false
    stream:
      defaultBinder: rabbit
      default.contentType: application/json
      bindings:
        input:
          destination: users
          group: usersGroup
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 500
            backOffMaxInterval: 1000
            backOffMultiplier: 2.0
      rabbit.bindings.input.consumer:
        autoBindDlq: true
        republishToDlq: true
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://${app.auth-server.host}:${app.auth-server.port}/realms/booking/protocol/openid-connect/certs
          issuer-uri: http://${app.auth-server.host}:${app.auth-server.port}/realms/booking
---
spring:
  config:
    activate:
      on-profile: prod

app:
  auth-server:
    host: keycloak
    port: 8080
  database:
    mongo:
      host: mongo
  rabbitmq:
    host: rabbitmq
    username: default_user_XhVRPRZIV6v4Kkn3VOU
    password: kePZ_VoNHTqJU4pxuIY8RlaWPhA9Bwv6

