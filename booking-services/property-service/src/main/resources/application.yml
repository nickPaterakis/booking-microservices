server:
  port: 8081

app:
  user-service:
    host: localhost
    port: 8084
  reservation-service:
    host: localhost
    port: 8083
  auth-server:
    host: localhost
    port: 8090
  database:
    mysql:
      host: localhost
      port: 3306
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

bucketname: booking-uniwa
subdirectory: images

spring:
  application:
    name: property-service
  rabbitmq:
    host: ${app.rabbitmq.host}
    port: ${app.rabbitmq.port}
    username: ${app.rabbitmq.username}
    password: ${app.rabbitmq.password}
  cloud:
    config:
      enabled: false
    gcp:
      credentials:
        location: classpath:key.json
    stream:
      defaultBinder: rabbit
      default.contentType: application/json
      bindings:
        input:
          destination: properties
          group: propertiesGroup
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 500
            backOffMaxInterval: 1000
            backOffMultiplier: 2.0
        output-users:
          destination: users
          producer.required-groups: auditGroup
        output-reservations:
          destination: reservations
          producer.required-groups: auditGroup
      rabbit.bindings.input.consumer:
        autoBindDlq: true
        republishToDlq: true
  jpa:
    hibernate:
      ddl-auto: update
  datasource:
    platform: mysql
    schema: classpath*:db/schema.sql
#    data: classpath*:db/data.sql
    url: jdbc:mysql://${app.database.mysql.host}:${app.database.mysql.port}/property_db?allowPublicKeyRetrieval=true&useSSL=false
    username: root
    password: root
    hikari:
      initialization-fail-timeout: 60000
      connection-test-query: SELECT 1
      maximum-pool-size: 10
    initialization-mode: ALWAYS
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://${app.auth-server.host}:${app.auth-server.port}/auth/realms/booking/protocol/openid-connect/certs
          issuer-uri: http://${app.auth-server.host}:${app.auth-server.port}/auth/realms/booking

---
spring:
  config:
    activate:
      on-profile: kubernetes

app:
  user-service:
    host: user-service
  reservation-service:
    host: reservation-service
  auth-server:
    host: keycloak
    port: 8080
  database:
    mysql:
      host: mysql
  rabbitmq:
    host: rabbitmq
    username: default_user_XhVRPRZIV6v4Kkn3VOU
    password: kePZ_VoNHTqJU4pxuIY8RlaWPhA9Bwv6
